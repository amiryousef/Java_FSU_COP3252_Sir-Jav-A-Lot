/*
Yousef, Amir
COP-3252
Assignment5
4/12/2014
*/

import java.util.*; 
import javax.swing.JOptionPane; 

//EnemyDriver class
public class EnemyDriver 
{

public static void main(String[] args) 
{

while(true)
{ 
System.out.println("\n\nWelcome to Knight Fight!\n");

/*Call getRandomEnemy() from the abstract superclass to choose randomly one of the three enemies, 
(Ogre, Sorcerer, or Troll). Each enemy will initialte it's object and will intitialize superclass 
Enemy by name, armor, weapon, and hit points. And call overridden methods fight() and toString().
We have six cases one for each enemy and one for two enemies out of the three combined together.*/
int enemy = Enemy.getRandomEnemy();
int enemyHitPoints = 0;
switch (enemy)
{
case 1: enemy = 1;
enemyHitPoints = 800;
System.out.println("\n\nYour enemy is Ogre:");
Ogre ogre = new Ogre("Ogre", 1, 1, 800);
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy Name: ", "Ogre", 
"Enemy Armor: ", "Metal", 
"Enemy Weapon: ", "Plate", 
"Enemy Hit Points: ", 800);
ogre.fight();
break;
case 2: enemy = 2;
enemyHitPoints = 500;
System.out.println("\nYour enemy is Sorcerer:");
Sorcerer sorcerer = new Sorcerer("Sorcerer", 2, 2, 500);
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy Name: ", "Sorcerer", 
"Enemy Armor: ", "Plate", 
"Enemy Weapon: ", "Battle Axe", 
"Enemy Hit Points: ", 500);
sorcerer.fight();
break;
case 3: enemy = 3;
enemyHitPoints = 300;
System.out.println("\nYour enemy is Troll:");
Troll troll = new Troll("Troll", 3, 3, 300);
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy Name: ", "Troll", 
"Enemy Armor: ", "Chain", 
"Enemy Weapon: ", "Spear", 
"Enemy Hit Points: ", 300);
troll.fight();
break;
case 4: enemy = 4;
enemyHitPoints = 1300;
System.out.println("\nYour enemies are Ogre and Sorcerer:");
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy1 Name: ", "Ogre", 
"Enemy1 Armor: ", "Metal", 
"Enemy1 Weapon: ", "Plate", 
"Enemy1 Hit Points: ", 800);
System.out.println("\nAttack your Knight with:");
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy2 Name: ", "Sorcerer", 
"Enemy2 Armor: ", "Plate", 
"Enemy2 Weapon: ", "Battle Axe", 
"Enemy2 Hit Points: ", 500);
break;
case 5: enemy = 5;
enemyHitPoints = 1100;
System.out.println("\nYour enemies are Ogre and Troll:");
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy1 Name: ", "Ogre", 
"Enemy1 Armor: ", "Metal", 
"Enemy1 Weapon: ", "Plate", 
"Enemy1 Hit Points: ", 800);
System.out.println("\nAttack your Knight with:");
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy2 Name: ", "Troll", 
"Enemy2 Armor: ", "Chain", 
"Enemy2 Weapon: ", "Spear", 
"Enemy2 Hit Points: ", 300);
break;
case 6: enemy = 6;
enemyHitPoints = 800;
System.out.println("\nYour enemies are Troll and Sorcerer:");
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy1 Name: ", "Troll", 
"Enemy1 Armor: ", "Chain", 
"Enemy1 Weapon: ", "Spear", 
"Enemy1 Hit Points: ", 300);
System.out.println("\nAttack your Knight with:");
System.out.printf("\n\n%s%s\n\n%s%s\n\n%s%s\n\n%s%d\n\n", 
"Enemy2 Name: ", "Sorcerer", 
"Enemy2 Armor: ", "Plate", 
"Enemy2 Weapon: ", "Battle Axe", 
"Enemy2 Hit Points: ", 500);
break;
}

/*Ask the user if he/she wants to autogenerate his knight? If the user answer y,  
Then randomKnight object will be initiated and random Knight will fight with random Enemy or two random Enemies.*/ 
String autoGeneratedKnight = JOptionPane.showInputDialog("Would you like to auto generate your Knight? (y|n)"); 
if (autoGeneratedKnight.equals("y"))
{
Random randomNumbers = new Random(); 
int randomKnightName = randomNumbers.nextInt(1300);
int randomKnightArmor = 1 + randomNumbers.nextInt(4);
int randomKnightWeapon = 1 + randomNumbers.nextInt(4); 
int randomKnightHitPoints = randomNumbers.nextInt(1300);
Knight randomKnight = new Knight(randomKnightName, randomKnightArmor, randomKnightWeapon, randomKnightHitPoints);
randomKnight.toString();
System.out.printf("\n\n%s%s\n", "Your random Knight is ", randomKnightName);
System.out.printf("\n\n%s%d\n\n%s%d\n\n%s%d\n\n%s%d\n\n", 
"Knight Name: ", randomKnightName, 
"Knight Armor: ", randomKnightArmor, 
"Knight Weapon: ", randomKnightWeapon, 
"Knight Hit Points: ", randomKnightHitPoints);
int knightDamage = randomKnightWeapon - randomKnightArmor;
randomKnight.takeDamage(knightDamage);
randomKnight.invalidDamageException(knightDamage);
try
{
if (knightDamage < 0)
{
throw new IllegalArgumentException("\nThe amount of damage can't be negative. Please try again.\n");
} 
}
catch (IllegalArgumentException invalidDamageValue)
{
System.out.printf("\n%s\n", invalidDamageValue.getMessage());
System.exit(0);
}
if(randomKnightHitPoints > enemyHitPoints)
{
System.out.println("\n\nThe knight is the winner!\n");
}
else if(randomKnightHitPoints < enemyHitPoints)
{
System.out.println("\n\nThe Enemy is the winner!\n");
}
else if(randomKnightHitPoints == enemyHitPoints)
{
System.out.println("\n\nKnight and Enemy are even. No winner. Please try again.\n");
}
randomKnight.toString();
String playAgain = JOptionPane.showInputDialog("\nWould you like to play again? (y|n)");
if(playAgain.equals("n"))
{
System.exit(1);
}
}

/*If the user answered no so he/she wants to enter his Knight information manually.
We will initiate Knight object and the Knight will fight with random Enemy or with two random Enemies.*/ 
else if (autoGeneratedKnight.equals("n"))
{ 
String knightName = JOptionPane.showInputDialog("Enter the name of your Knight: ");
Random randomNumbers = new Random(); 
int knightHitPoints = randomNumbers.nextInt(1300); 
int knightWeapon = Integer.parseInt(JOptionPane.showInputDialog("Now select your weapon! (Choose number)\n" 
+ "1)Long Sword\n" + "2)Battle Axe\n" + "3)Spear\n" + "4)Warhammer"));
int knightArmor = Integer.parseInt(JOptionPane.showInputDialog("Now select your armor! (Choose number)\n" 
+ "1)Metal\n" + "2)Plate\n" + "3)Chain\n" + "4)Leather"));
Knight knight = new Knight(knightName, knightArmor, knightWeapon, knightHitPoints); 
knight.setKnightName(knightName); 
knight.setKnightArmor(knightArmor);
knight.setKnightWeapon(knightWeapon);
knight.setKnightHitPoints(knightHitPoints);
System.out.printf("\n\n%s%s\n", "Your Knight is ", knightName);
System.out.printf("\n\n%s%s\n\n%s%d\n\n%s%d\n\n%s%d\n\n", 
"Knight Name: ", knightName, 
"Knight Armor: ", knightArmor, 
"Knight Weapon: ", knightWeapon, 
"Knight Hit Points: ", knightHitPoints);  
int knightDamage = knightWeapon - knightArmor;
knight.takeDamage(knightDamage);
knight.invalidDamageException(knightDamage);
try
{
if (knightDamage < 0)
{
throw new IllegalArgumentException("\nThe amount of damage can't be negative. Please try again.\n");
} 
}
catch (IllegalArgumentException invalidDamageValue)
{
System.out.printf("\n%s\n", invalidDamageValue.getMessage());
System.exit(0);
}
if(knightHitPoints > enemyHitPoints)
{
System.out.println("\n\nThe knight is the winner!\n");
}
else if(knightHitPoints < enemyHitPoints)
{
System.out.println("\n\nThe Enemy is the winner!\n");
}
else if(knightHitPoints == enemyHitPoints)
{
System.out.println("\n\nKnight and Enemy are even. No winner. Please try again.\n");
}
knight.toString();
String playAgain = JOptionPane.showInputDialog("\nWould you like to play again? (y|n)");
if(playAgain.equals("n"))
{
System.exit(1);
}
}

}

}
}



